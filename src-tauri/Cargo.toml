[package]
name = "app"
version = "0.1.0"
description = "A Tauri App"
authors = ["Eduardo Neville"]
license = ""
repository = ""
default-run = "app"
edition = "2021"
rust-version = "1.77.2"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[build-dependencies]
tauri-build = { version = "2", features = [] }

[dependencies]
# Default
serde_json = "1.0"
serde = { version = "1.0", features = ["derive"] }
serde_urlencoded = "0.7"
reqwest = { version = "0.12.12", features = ["json"] }
tauri = { version = "2", features = [] }
thiserror = "2.0.11"
dirs = "6.0.0"

# DB
argon2 = "0.5.3"

# Supabase
dotenv = "0.15.0"
uuid = "1.13.1"

# Encrypted Sqlite
rusqlite = { version="0.33.0", features= ["bundled-sqlcipher-vendored-openssl"] }
pbkdf2 = "0.12.2"
sha2 = "0.10.8"
rand = "0.9.0"
base64 = "0.22.1"
hex = "0.4.3"
jsonwebtoken = "=9.3.1"

# Async runtime
tokio = { version = "1.20.0", features = ["macros"] } # "full"
chrono = "0.4.39"

# Required Tauri 2.0 Plugins
tauri-plugin-updater = "2"
tauri-plugin-http = "2"
tauri-plugin-clipboard-manager = "2"
tauri-plugin-os = "2"
tauri-plugin-process = "2"
tauri-plugin-shell = "2"
tauri-plugin-stronghold = "2.0.0"
tauri-plugin-fs = "2.2.0"

[features]
# this feature is used for production builds or when `devPath` points to the filesystem and the built-in dev server is disabled.
# If you use cargo directly instead of tauri's cli you can use this feature flag to switch between tauri's `dev` and `build` modes.
# DO NOT REMOVE!!
custom-protocol = [ "tauri/custom-protocol" ]
